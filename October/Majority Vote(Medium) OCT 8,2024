Majority Vote
This is a very important problem and can be solved in 2 ways i)the better apporach(using hashmaps) ii)optimal using (Boyer-Moore Voting Algorithm)

i)Better Approach(using hashmap)

vector<int> findMajority(vector<int>& arr) {
        // Your code goes here.
        int n=arr.size();
        map<int,int> mp;
        
        for(int i=0;i<n;i++){
            mp[arr[i]]++;
        }
        vector<int> ls;
        for(auto it:mp){
            if(it.second > (n/3))
            ls.push_back(it.first);
    
        }
        if(ls.empty()) return{-1};
        return ls;
    }

/* 
remember that in the for(auto it:ele) loop in the else part don't write return -1,carefull come outside and put an if condition of ls vector being empty if empy then return -1.
*/

ii)Optimal Approach(Boyer-Moore Voting Algorithm)

vector<int> findMajority(vector<int>& arr) {
        // Your code goes here.
        int n=arr.size();
        int cnt1=0,cnt2=0;
        int ele1,ele2;
        
        for(int i=0;i<n;i++){
            if(cnt1==0 && ele2!=arr[i]){
                cnt1=1;
                ele1=arr[i];
            }
            else if(cnt2==0 && ele1!=arr[i]){
                cnt2=1;
                ele2=arr[i];
            }
            else if(ele1==arr[i]){
                cnt1++;
            }
             else if(ele2==arr[i]){
                cnt2++;
            }
            else {
                cnt1--;
                cnt2--;
            }
        }
        vector<int> ls;
        cnt1=0,cnt2=0;
        
        for(int i=0;i<n;i++){
            if(ele1==arr[i]) cnt1++;
            if(ele2==arr[i]) cnt2++;
        }
        
        if(cnt1>(n/3)) ls.push_back(ele1);
        if(cnt2>(n/3) && ele2!=ele1) ls.push_back(ele2);
        
        if(ls.empty()) return{-1};
        
        return ls;
    }



/* 
Dont make the mistake of taking ele1 as ele1[i] and make sure that if(cnt2>(n/3) && ele2!=ele1) we do this to make sure ele1 dosen't repate again when both are 
equal we have to do this.
And never forget if(ls.empty()) return {-1}.
*/

