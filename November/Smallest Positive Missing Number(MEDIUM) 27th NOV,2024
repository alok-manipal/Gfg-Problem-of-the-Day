int missingNumber(vector<int> &arr) {
        // Your code here
        int n=arr.size();
        sort(arr.begin(),arr.end());
        int res=1;
        for(int i=0;i<n;i++){
            if(arr[i]==res) res++; /* Here if arr[i]<0 continue 
                                          if arr[i]>0 break
                                          if arr[i]==res res++ */
            
            else if(arr[i]>res) break;/*Input: arr[] = [2, -3, 4, 1, 1, 7] â†’ Sorted: [-3, 1, 1, 2, 4, 7].
                                        When res = 3 and arr[4] = 4, there is no number equal to 3 before 4. So, we stop and conclude that 3 is missing.*/
        }
        return res;
    }

/*
You are given an integer array arr[]. Your task is to find the smallest positive number missing from the array.

Note: Positive number starts from 1. The array can have negative integers too.

Examples:

Input: arr[] = [2, -3, 4, 1, 1, 7]
Output: 3
Explanation: Smallest positive missing number is 3.
Input: arr[] = [5, 3, 2, 5, 1]
Output: 4
Explanation: Smallest positive missing number is 4.
Input: arr[] = [-8, 0, -1, -4, -3]
Output: 1
Explanation: Smallest positive missing number is 1.
Constraints:  
1 <= arr.size() <= 10^5
-10^6 <= arr[i] <= 10^6

Here if arr[i]<0 continue 
     if arr[i]>0 break
     if arr[i]==res res++
*/
